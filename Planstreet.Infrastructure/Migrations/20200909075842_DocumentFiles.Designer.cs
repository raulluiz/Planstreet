// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planstreet.Infrastructure.Context;

namespace Planstreet.Infrastructure.Migrations
{
    [DbContext(typeof(PlanstreetContext))]
    [Migration("20200909075842_DocumentFiles")]
    partial class DocumentFiles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Planstreet.ApplicationCore.Entities.DefaultFolder", b =>
                {
                    b.Property<int>("DefaultFolderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreationTime");

                    b.Property<int?>("Creator");

                    b.Property<string>("RemoteHost")
                        .HasMaxLength(50);

                    b.Property<byte?>("Status");

                    b.Property<int?>("Updater");

                    b.Property<DateTime?>("UpdationTime");

                    b.HasKey("DefaultFolderId");

                    b.ToTable("DefaultFolder");
                });

            modelBuilder.Entity("Planstreet.ApplicationCore.Entities.DocumentFiles", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("CreationTime");

                    b.Property<int?>("Creator");

                    b.Property<int?>("DefaultFolderId");

                    b.Property<string>("FileName")
                        .HasMaxLength(100);

                    b.Property<string>("FileNameOnDisk")
                        .HasMaxLength(100);

                    b.Property<string>("FilePath")
                        .HasMaxLength(500);

                    b.Property<int?>("FolderId");

                    b.Property<string>("RemoteHost")
                        .HasMaxLength(50);

                    b.Property<int?>("ResourceId");

                    b.Property<byte>("Status");

                    b.Property<int?>("Updater");

                    b.Property<DateTime?>("UpdationTime");

                    b.HasKey("FileId");

                    b.HasIndex("DefaultFolderId");

                    b.HasIndex("FolderId");

                    b.ToTable("DocumentFiles");
                });

            modelBuilder.Entity("Planstreet.ApplicationCore.Entities.DocumentFolder", b =>
                {
                    b.Property<int>("FolderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreationTime");

                    b.Property<int?>("Creator");

                    b.Property<int?>("DefaultFolderId");

                    b.Property<string>("FolderSize")
                        .HasMaxLength(50);

                    b.Property<int?>("ParentFolderId");

                    b.Property<string>("Path");

                    b.Property<string>("RemoteHost")
                        .HasMaxLength(50);

                    b.Property<int?>("ResourceId");

                    b.Property<byte?>("Status");

                    b.Property<int?>("Updater");

                    b.Property<DateTime?>("UpdationTime");

                    b.HasKey("FolderId");

                    b.HasIndex("DefaultFolderId");

                    b.ToTable("DocumentFolder");
                });

            modelBuilder.Entity("Planstreet.ApplicationCore.Entities.DocumentFiles", b =>
                {
                    b.HasOne("Planstreet.ApplicationCore.Entities.DefaultFolder", "DefaultFolder")
                        .WithMany("DocumentFileses")
                        .HasForeignKey("DefaultFolderId");

                    b.HasOne("Planstreet.ApplicationCore.Entities.DocumentFolder", "DocumentFolder")
                        .WithMany("DocumentFileses")
                        .HasForeignKey("FolderId");
                });

            modelBuilder.Entity("Planstreet.ApplicationCore.Entities.DocumentFolder", b =>
                {
                    b.HasOne("Planstreet.ApplicationCore.Entities.DefaultFolder", "DefaultFolder")
                        .WithMany("DocumentFolders")
                        .HasForeignKey("DefaultFolderId");
                });
#pragma warning restore 612, 618
        }
    }
}
